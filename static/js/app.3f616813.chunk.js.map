{"version":3,"sources":["src/Utils/AsyncStorageUtils.ts","src/DAL/Api.ts","src/BLL/NavigateParamsSlice.ts","src/BLL/Store.ts","src/common/Variables.ts","src/common/CustomButton.tsx","src/styled-components/StyledInput.tsx","src/CustomHooks/CustomHooks.ts","src/View/Login.tsx","src/View/TaskView.tsx","src/View/Todo.tsx","src/View/Task.tsx","src/View/Tasks.tsx","src/View/TodoContainer.tsx","src/View/TaskList.tsx","src/screens/TaskScreen/TaskScreen.tsx","src/View/Header.tsx","src/View/EmptyContent.tsx","src/View/ViewModContainer.tsx","src/View/TodoList.tsx","src/screens/Todo-Screen/TodoScreen.tsx","src/screens/Root-screen/RootScreen.tsx","App.tsx"],"names":["saveStorage","key","value","jsonValue","JSON","stringify","AsyncStorage","setItem","console","log","loadStorage","getItem","parse","axiosQuery","baseUrl","withCredentials","headers","url","method","data","params","cookie","axios","result","AxiosError","err","error","status","response","message","Api","createApi","reducerPath","tagTypes","baseQuery","endpoints","build","authMe","query","providesTags","login","mutation","payload","invalidatesTags","logout","body","getTodoList","postTodo","title","putTodo","todoId","deleteTodo","getTasks","todolistId","page","count","postTask","putTask","task","todoListId","_id","deleteTask","taskId","navigateParamsSlice","createSlice","name","initialState","currentTodo","currentTask","reducers","changeCurrentTodo","state","action","changeCurrentTask","store","configureStore","reducer","navigateParamsState","middleware","getDefaultMiddleware","concat","Dimensions","get","HEIGHT","height","WIDTH","width","PADDING","MARGIN","FONTSIZEPrimary","FONTSIZESecondary","TEXTCOLOR","BACKGROUNDCOLOR","CustomButton","memo","props","children","onPress","styleButton","styleTitle","activeOpacity","underlayColor","disabled","onPressHandler","useCallback","event","styles","button","StyleSheet","create","minWidth","flexWrap","paddingHorizontal","justifyContent","alignItems","color","fontSize","StyledInput","styled","TextInput","useAppDispatch","useDispatch","useAppSelector","useSelector","useAppNavigation","useNavigation","allActions","actions","useActions","dispatch","bindActionCreators","Login","useAuthMeQuery","isLoading","isError","useLoginMutation","navigation","useEffect","resultCode","navigate","screen","onSubmit","values","loginContainer","email","password","handleChange","handleBlur","handleSubmit","loginForm","loginTextField","flex","paddingVertical","backgroundColor","marginVertical","TaskView","container","taskBar","checkedTask","paddingTop","StatusBar","currentHeight","flexDirection","Todo","addTaskHandler","todo","viewMod","onChangeTaskTitle","currentTaskTitle","deleteTodoHandler","onAddTask","onDeleteTodo","titleContainer","inputAndButtonBox","input","alignSelf","Task","usePutTaskMutation","doubleTap","tapCount","setTimeout","checkTask","taskContainer","maxWidth","maxHeight","Tasks","tasks","render","item","TodoContainer","useState","taskTitle","setTaskTitle","useGetTasksQuery","useDeleteTodoMutation","usePostTaskMutation","items","onChangeTodoTitle","TaskList","Tab","createBottomTabNavigator","TaskScreen","headerShown","Header","createTodoHandler","inputValue","setInputValue","onTextInput","onCreateTodo","modalInputStyle","borderStyle","borderColor","EmptyContent","ViewModContainer","todoContainer","minHeight","TodoList","useGetTodoListQuery","todoList","usePostTodoMutation","createTodo","newTodoTitle","onNavigate","TodoScreen","RootScreen","App"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,GAAMA,YAAW,oFAAG,iBAAOC,GAAP,CAAkBC,KAAlB,kJAEbC,SAFa,CAEDC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFC,uBAGbI,sBAAY,CAACC,OAAb,CAAqBN,GAArB,CAAyBE,SAAzB,CAHa,sFAKnBK,OAAO,CAACC,GAAR,cALmB,mEAAH,kBAAXT,YAAW,gDAAjB,CASA,GAAMU,YAAW,qFAAG,kBAAOT,GAAP,8KAEKK,sBAAY,CAACK,OAAb,CAAqBV,GAArB,CAFL,QAEbE,SAFa,iDAGZA,SAAS,EAAI,IAAb,CAAoBC,IAAI,CAACQ,KAAL,CAAWT,SAAX,CAApB,CAA4C,IAHhC,6DAKnBK,OAAO,CAACC,GAAR,eALmB,sEAAH,kBAAXC,YAAW,8CAAjB,C;;ACNP,GAAMG,eAAU,CAAG,QAAbA,WAAa,sEAMP,CAACC,OAAO,CAAE,EAAV,CANO,CACdA,OADc,MACdA,OADc,CACLC,eADK,MACLA,eADK,CACYC,OADZ,MACYA,OADZ,iEAAC,2BAehB,oNAAQC,GAAR,OAAQA,GAAR,CAAaC,MAAb,OAAaA,MAAb,CAAqBC,IAArB,OAAqBA,IAArB,CAA2BC,MAA3B,OAA2BA,MAA3B,uBAGyBV,YAAW,CAAC,QAAD,CAHpC,QAGUW,MAHV,eAII,GAAIA,MAAJ,CAAY,CAKX,CATL,gBAWQb,OAAO,CAACC,GAAR,CAAYO,OAAZ,EAXR,sBAY6BM,gBAAK,CAAC,CAACL,GAAG,CAAEH,OAAO,CAAGG,GAAhB,CAAqBC,MAAM,CAANA,MAArB,CAA6BC,IAAI,CAAJA,IAA7B,CAAmCC,MAAM,CAANA,MAAnC,CAA2CJ,OAAO,CAAPA,OAA3C,CAAoDD,eAAe,CAAfA,eAApD,CAAD,CAZlC,QAYcQ,MAZd,eAaQf,OAAO,CAACC,GAAR,CAAYc,MAAZ,EAbR,gCAiBe,CAACJ,IAAI,CAAEI,MAAM,CAACJ,IAAd,CAjBf,iEAmBY,sBAAsBK,oBAnBlC,2BAoBgBC,GApBhB,aAqBYjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,EArBZ,gCAsBmB,CACHC,KAAK,CAAE,CACHC,MAAM,gBAAEF,GAAG,CAACG,QAAN,eAAE,cAAcD,MADnB,CAEHR,IAAI,CAAE,iBAAAM,GAAG,CAACG,QAAJ,8BAAcT,IAAd,GAAsBM,GAAG,CAACI,OAF7B,CADJ,CAtBnB,iGAfe,iEAAnB,CAkDO,GAAMC,IAAG,CAAGC,0BAAS,CAAC,CACzBC,WAAW,CAAE,KADY,CAEzBC,QAAQ,CAAE,CAAC,OAAD,CAAU,QAAV,CAAoB,UAApB,CAAgC,YAAhC,CAA8C,SAA9C,CAAyD,UAAzD,CAAqE,SAArE,CAAgF,YAAhF,CAFe,CAGzBC,SAAS,CAAErB,cAAU,CACjB,CACIC,OAAO,4CADX,CADiB,CAHI,CAazBqB,SAAS,CAAG,mBAACC,KAAD,QAAY,CACpBC,MAAM,CAAED,KAAK,CAACE,KAAN,CAAsC,CAC1CA,KAAK,CAAE,uBAAO,CAACrB,GAAG,WAAJ,CAAkBC,MAAM,CAAE,KAA1B,CAAP,EADmC,CAE1CqB,YAAY,CAAE,8BAAM,CAAC,OAAD,CAAU,QAAV,CAAN,EAF4B,CAAtC,CADY,CAKpBC,KAAK,CAAEJ,KAAK,CAACK,QAAN,CAA2D,CAC9DH,KAAK,CAAE,eAACI,OAAD,QAAc,CAACzB,GAAG,cAAJ,CAAqBC,MAAM,CAAE,MAA7B,CAAqCC,IAAI,CAAEuB,OAA3C,CAAd,EADuD,CAE9DC,eAAe,CAAE,CAAC,OAAD,CAF6C,CAA3D,CALa,CASpBC,MAAM,CAAER,KAAK,CAACK,QAAN,CAA+B,CACnCH,KAAK,CAAE,eAACI,OAAD,QAAc,CAACzB,GAAG,cAAJ,CAAqBC,MAAM,CAAE,QAA7B,CAAuC2B,IAAI,CAAEH,OAA7C,CAAd,EAD4B,CAEnCC,eAAe,CAAE,CAAC,QAAD,CAFkB,CAA/B,CATY,CAcpBG,WAAW,CAAEV,KAAK,CAACE,KAAN,CAAkC,CAC3CA,KAAK,CAAE,uBAAO,CAACrB,GAAG,cAAJ,CAAqBC,MAAM,CAAE,KAA7B,CAAP,EADoC,CAE3CqB,YAAY,CAAE,8BAAM,CAAC,UAAD,CAAa,SAAb,CAAwB,YAAxB,CAAN,EAF6B,CAAlC,CAdO,CAkBpBQ,QAAQ,CAAEX,KAAK,CAACK,QAAN,CAAiD,CACvDH,KAAK,CAAE,oBAACU,MAAD,2DAAiB,UAAjB,OAAiC,CAAC/B,GAAG,cAAJ,CAAqBC,MAAM,OAA3B,CAAqCC,IAAI,CAAE,CAAC6B,KAAK,CAALA,KAAD,CAA3C,CAAjC,EADgD,CAEvDL,eAAe,CAAE,CAAC,UAAD,CAFsC,CAAjD,CAlBU,CAsBpBM,OAAO,CAAEb,KAAK,CAACK,QAAN,CAA4D,CACjEH,KAAK,CAAE,eAACI,OAAD,QAAc,CAACzB,GAAG,gBAAiByB,OAAO,CAACQ,MAA7B,CAAuChC,MAAM,MAA7C,CAAsDC,IAAI,CAAE,CAAC6B,KAAK,CAAEN,OAAO,CAACM,KAAhB,CAA5D,CAAd,EAD0D,CAEjEL,eAAe,CAAE,CAAC,SAAD,CAFgD,CAA5D,CAtBW,CA0BpBQ,UAAU,CAAEf,KAAK,CAACK,QAAN,CAAiC,CACzCH,KAAK,CAAE,eAACY,MAAD,QAAa,CAACjC,GAAG,gBAAiBiC,MAArB,CAA+BhC,MAAM,CAAE,QAAvC,CAAb,EADkC,CAEzCyB,eAAe,CAAE,CAAC,YAAD,CAFwB,CAAjC,CA1BQ,CA+BpBS,QAAQ,CAAEhB,KAAK,CAACE,KAAN,CAAgF,CACtFA,KAAK,CAAE,yBAAEe,WAAF,OAAEA,UAAF,kBAAcC,IAAd,CAAcA,IAAd,qBAAqB,CAArB,8BAAwBC,KAAxB,CAAwBA,KAAxB,sBAAgC,GAAhC,mBAA0C,CAC7CtC,GAAG,gBAAiBoC,UAAjB,SAD0C,CAE7CnC,MAAM,CAAE,KAFqC,CAG7CE,MAAM,CAAE,CAACmC,KAAK,CAALA,KAAD,CAAQD,IAAI,CAAJA,IAAR,CAHqC,CAA1C,EAD+E,CAMtFf,YAAY,CAAE,8BAAM,CAAC,UAAD,CAAa,SAAb,CAAwB,YAAxB,CAAN,EANwE,CAAhF,CA/BU,CAwCpBiB,QAAQ,CAAEpB,KAAK,CAACK,QAAN,CAA4E,CAClFH,KAAK,CAAE,qBAAyB,IAAvBe,WAAuB,OAAvBA,UAAuB,CAAXL,KAAW,OAAXA,KAAW,CAC5B,MAAO,CAAC/B,GAAG,gBAAiBoC,UAAjB,SAAJ,CAAyCnC,MAAM,CAAE,MAAjD,CAAyDC,IAAI,CAAE,CAAC6B,KAAK,CAALA,KAAD,CAA/D,CAAP,CACH,CAHiF,CAIlFL,eAAe,CAAE,CAAC,UAAD,CAJiE,CAA5E,CAxCU,CA+CpBc,OAAO,CAAErB,KAAK,CAACK,QAAN,CAA+C,CACpDH,KAAK,CAAE,eAACoB,IAAD,QAAW,CAACzC,GAAG,gBAAiByC,IAAI,CAACC,UAAtB,WAA0CD,IAAI,CAACE,GAAnD,CAA0D1C,MAAM,CAAE,KAAlE,CAAyEC,IAAI,CAAEuC,IAA/E,CAAX,EAD6C,CAEpDf,eAAe,CAAE,CAAC,SAAD,CAFmC,CAA/C,CA/CW,CAmDpBkB,UAAU,CAAEzB,KAAK,CAACK,QAAN,CAAiE,CACzEH,KAAK,CAAE,yBAAEe,WAAF,OAAEA,UAAF,CAAcS,MAAd,OAAcA,MAAd,OAA2B,CAAC7C,GAAG,gBAAiBoC,UAAjB,WAAqCS,MAAzC,CAAmD5C,MAAM,CAAE,QAA3D,CAA3B,EADkE,CAEzEyB,eAAe,CAAE,CAAC,YAAD,CAFwD,CAAjE,CAnDQ,CAAZ,EAba,CAAD,CAArB,C;;ACnDA,GAAMoB,oBAAmB,CAACC,wCAAW,CAAC,CACzCC,IAAI,CAAC,qBADoC,CAEzCC,YAAY,CAAC,CACTC,WAAW,CAAC,EADH,CAETC,WAAW,CAAC,EAFH,CAF4B,CAMzCC,QAAQ,CAAC,CACLC,iBAAiB,CAAC,2BAACC,KAAD,CAAOC,MAAP,CAA4C,CAC1DD,KAAK,CAACJ,WAAN,CAAkBK,MAAM,CAAC9B,OAAzB,CACH,CAHI,CAIL+B,iBAAiB,CAAC,2BAACF,KAAD,CAAOC,MAAP,CAAwC,CACtDD,KAAK,CAACH,WAAN,CAAkBI,MAAM,CAAC9B,OAAzB,CACH,CANI,CANgC,CAAD,CAArC,C;;ACAA,GAAMgC,MAAK,CAACC,2CAAc,CAAC,CAC9BC,OAAO,CAAC,mCACJC,mBAAmB,CAACd,mBAAmB,CAACa,OADrC,EAEF9C,GAAG,CAACE,WAFF,CAEeF,GAAG,CAAC8C,OAFnB,CADuB,CAK9BE,UAAU,CAAC,oBAAAC,oBAAoB,QAC3BA,qBAAoB,GAAGC,MAAvB,CAA8BlD,GAAG,CAACgD,UAAlC,CAD2B,EALD,CAAD,CAA1B,C;;;;;;;;;;;;;;;;;;;;;;;;ACHA,oBAAkCG,qBAAU,CAACC,GAAX,CAAe,QAAf,CAAlC,CAAcC,MAAd,iBAAOC,MAAP,CAA2BC,KAA3B,iBAAqBC,KAArB,CAGA,GAAMC,QAAO,CAAG,EAAhB,CACA,GAAMC,OAAM,CAAC,EAAb,CACA,GAAMC,gBAAe,CAAC,EAAtB,CACA,GAAMC,kBAAiB,CAAC,EAAxB,CACA,GAAMC,UAAS,CAAC,SAAhB,CACA,GAAMC,gBAAe,CAAC,iBAAtB,C;;qDCMA,GAAMC,aAAuC,CAAGC,kCAAI,CAAC,SAACC,KAAD,CAAW,CACnE,GAAOC,SAAP,CAA8GD,KAA9G,CAAOC,QAAP,CAAiBC,OAAjB,CAA8GF,KAA9G,CAAiBE,OAAjB,cAA8GF,KAA9G,CAA0B/C,KAA1B,CAA0BA,KAA1B,uBAAkC,QAAlC,cAA4CkD,WAA5C,CAA8GH,KAA9G,CAA4CG,WAA5C,CAAyDC,UAAzD,CAA8GJ,KAA9G,CAAyDI,UAAzD,CAAqEC,aAArE,CAA8GL,KAA9G,CAAqEK,aAArE,CAAoFC,aAApF,CAA8GN,KAA9G,CAAoFM,aAApF,CAAkGC,QAAlG,CAA8GP,KAA9G,CAAkGO,QAAlG,CAEA,GAAMC,eAAc,CAAGC,yCAAW,CAAE,SAACC,KAAD,CAAkC,CAClER,OAAO,EAAIA,OAAO,CAACQ,KAAD,CAAlB,CACH,CAFiC,CAEhC,CAACR,OAAD,CAFgC,CAAlC,CAIA,MACI,4CAAC,6BAAD,EACI,OAAO,CAAEM,cADb,CAEI,QAAQ,CAAED,QAFd,CAGI,aAAa,CAAE,CAAC,CAACF,aAAF,CAAkBA,aAAlB,CAAkC,GAHrD,CAII,KAAK,CAAEM,MAAM,CAACC,MAJlB,CAKI,aAAa,CAAE,CAAC,CAACN,aAAF,CAAkBA,aAAlB,CAAkCT,eALrD,EAOI,2CAAC,eAAD,EAAM,KAAK,CAAEc,MAAM,CAAC1D,KAApB,EACKgD,QAAQ,EAAIhD,KADjB,CAPJ,CADJ,CAaH,CApB0D,CAApD,CAqBP,GAAM0D,OAAM,CAAGE,qBAAU,CAACC,MAAX,CAAkB,CAC7BF,MAAM,CAAE,CACJG,QAAQ,CAAE,CAACzB,KAAK,CAAGE,OAAO,CAAG,CAAnB,EAAwB,CAD9B,CAEJwB,QAAQ,CAAC,QAFL,CAGJC,iBAAiB,CAAE,CAHf,CAIJC,cAAc,CAAE,QAJZ,CAKJC,UAAU,CAAE,QALR,CADqB,CAS7BlE,KAAK,CAAE,CACHmE,KAAK,CAAE,aADJ,CAEHC,QAAQ,CAAE3B,eAFP,CATsB,CAAlB,CAAf,C;;;;;;;;;;;;;;AC/BO,GAAM4B,YAAW,CAAGC,uCAAM,CAACC,SAAV,gMAET9B,eAFS,CAGbE,SAHa,CAKNA,SALM,CAAjB,C;;;;;;;;uxBCEA,GAAM6B,eAAqC,CAAGC,iBAA9C,CACA,GAAMC,eAAsD,CAAGC,iBAA/D,CACA,GAAMC,6BAAgB,CAAG,QAAnBA,iBAAmB,SAAMC,yCAAa,EAAnB,EAAzB,CAEP,GAAMC,WAAU,kBACT/D,mBAAmB,CAACgE,OADX,CAAhB,CAGO,GAAMC,uBAAU,CAAG,QAAbA,WAAa,EAAM,CAC5B,GAAMC,SAAQ,CAAGT,cAAc,EAA/B,CACA,MAAOU,oCAAkB,CAACJ,UAAD,CAAaG,QAAb,CAAzB,CACH,CAHM,C;;yDCJA,GAAME,YAAK,CAAG,QAARA,MAAQ,EAAM,CACvB,wBAA0CrG,GAAG,CAACsG,cAAJ,EAA1C,CAAOjH,IAAP,qBAAOA,IAAP,CAAakH,SAAb,qBAAaA,SAAb,CAAwB3G,KAAxB,qBAAwBA,KAAxB,CAA+B4G,OAA/B,qBAA+BA,OAA/B,CACA,GAAM7G,IAAG,CAAGC,KAAZ,CACA,0BAAgBI,GAAG,CAACyG,gBAAJ,EAAhB,kFAAO/F,KAAP,2BACA,GAAMgG,WAAU,CAAGZ,4BAAgB,EAAnC,CAEAa,uCAAS,CAAC,UAAM,CACZ,GAAItH,IAAI,EAAIA,IAAI,CAACuH,UAAL,GAAoB,CAAhC,CAAmC,CAC/BF,UAAU,CAACG,QAAX,CAAoB,YAApB,CAAkC,CAACC,MAAM,CAAE,UAAT,CAAlC,EACH,CACJ,CAJQ,CAIN,CAACzH,IAAD,CAJM,CAAT,CAMA,GAAM0H,SAAQ,oFAAG,iBAAOC,MAAP,0JAEHtG,MAAK,CAACsG,MAAD,CAFF,sFAITtI,OAAO,CAACC,GAAR,cAJS,mEAAH,kBAARoI,SAAQ,4CAAd,CAQA,GAAIR,SAAJ,CAAe,CACX,MACI,4CAAC,eAAD,EAAM,KAAK,CAAE3B,YAAM,CAACqC,cAApB,EACI,2CAAC,4BAAD,EAAmB,IAAI,CAAE,OAAzB,CAAkC,KAAK,CAAE,kBAAzC,EADJ,CADJ,CAKH,CAED,GAAIT,OAAJ,CAAa,CACT,MACI,4CAAC,eAAD,EAAM,KAAK,CAAE5B,YAAM,CAACqC,cAApB,EAEQrH,KAAK,CACD,2CAAC,eAAD,MAAOD,GAAG,CAACN,IAAX,CADC,CAED,2CAAC,eAAD,cAJZ,CADJ,CAUH,CAED,MACI,4CAAC,eAAD,EAAM,KAAK,CAAEuF,YAAM,CAACqC,cAApB,EACI,2CAAC,oBAAD,EACI,aAAa,CAAE,CAACC,KAAK,CAAE,EAAR,CAAYC,QAAQ,CAAE,EAAtB,CADnB,CAEI,QAAQ,CAAEJ,QAFd,EAIK,mBAAEK,aAAF,OAAEA,YAAF,CAAgBC,UAAhB,OAAgBA,UAAhB,CAA4BC,YAA5B,OAA4BA,YAA5B,CAA0CN,MAA1C,OAA0CA,MAA1C,OACG,4CAAC,eAAD,EAAM,KAAK,CAAEpC,YAAM,CAAC2C,SAApB,EACI,2CAAC,WAAD,EACI,YAAY,CAAEH,YAAY,CAAC,OAAD,CAD9B,CAEI,MAAM,CAAEC,UAAU,CAAC,OAAD,CAFtB,CAGI,KAAK,CAAEL,MAAM,CAACE,KAHlB,EADJ,CAMI,2CAAC,WAAD,EACI,KAAK,CAAEtC,YAAM,CAAC4C,cADlB,CAEI,YAAY,CAAEJ,YAAY,CAAC,UAAD,CAF9B,CAGI,MAAM,CAAEC,UAAU,CAAC,UAAD,CAHtB,CAII,KAAK,CAAEL,MAAM,CAACG,QAJlB,EANJ,CAaI,2CAAC,YAAD,EACI,OAAO,CAAGG,YADd,CAEI,KAAK,CAAC,QAFV,EAbJ,CADH,EAJL,CADJ,CADJ,CA4BH,CArEM,CAuEP,GAAM1C,aAAM,CAAGE,qBAAU,CAACC,MAAX,CAAkB,CAC7BkC,cAAc,CAAE,CACZQ,IAAI,CAAE,CADM,CAEZtC,cAAc,CAAE,QAFJ,CAGZC,UAAU,CAAE,QAHA,CADa,CAM7BmC,SAAS,CAAE,CACP/D,KAAK,CAAGD,KAAK,CAAGE,OAAO,CAAG,CADnB,CAEPyB,iBAAiB,CAAEzB,OAFZ,CAGPiE,eAAe,CAAEjE,OAHV,CAIPkE,eAAe,CAAE,iBAJV,CANkB,CAY7BH,cAAc,CAAE,CACZI,cAAc,CAAElE,MAAM,CAAG,CADb,CAZa,CAAlB,CAAf,C;;;;;4DC3EO,GAAMmE,kBAAQ,CAAG,QAAXA,SAAW,EAAM,CAC1B,GAAMjG,KAAI,CAAGgE,cAAc,CAAC,SAAAnD,KAAK,QAAIA,MAAK,CAACM,mBAAN,CAA0BT,WAA9B,EAAN,CAA3B,CAEA,MACI,4CAAC,eAAD,EACI,KAAK,CAAEsC,eAAM,CAACkD,SADlB,EAEI,2CAAC,eAAD,EAAM,KAAK,CAAElD,eAAM,CAAC1D,KAApB,EAA4BU,IAAI,CAACV,KAAjC,CAFJ,CAGI,2CAAC,eAAD,EAAM,KAAK,CAAE0D,eAAM,CAACmD,OAApB,EACI,2CAAC,YAAD,cADJ,CAEI,2CAAC,YAAD,eAFJ,CAGI,2CAAC,YAAD,aAHJ,CAHJ,CADJ,CAWH,CAdM,CAeP,GAAMnD,gBAAM,CAAGE,qBAAU,CAACC,MAAX,CAAkB,CAC7BiD,WAAW,CAAE,CACTL,eAAe,CAAE7D,eADR,CADgB,CAI7BgE,SAAS,CAAE,CACPG,UAAU,CAAEC,oBAAS,CAACC,aAAV,EAA2B,CADhC,CAEPjD,iBAAiB,CAAEzB,OAAO,CAAG,CAFtB,CAGPgE,IAAI,CAAE,CAHC,CAIPtC,cAAc,CAAE,eAJT,CAJkB,CAU7BjE,KAAK,CAAE,CACHmE,KAAK,CAAExB,SADJ,CAEHyB,QAAQ,CAAE3B,eAFP,CAVsB,CAc7BoE,OAAO,CAAE,CACLK,aAAa,CAAE,KADV,CAELjD,cAAc,CAAE,cAFX,CAdoB,CAAlB,CAAf,C;;wDCHO,GAAMkD,KAAmB,CAAGrE,kCAAI,CAAC,SAACC,KAAD,CAAW,CAC/C,GAAOC,SAAP,CAA0GD,KAA1G,CAAOC,QAAP,CAAiBoE,cAAjB,CAA0GrE,KAA1G,CAAiBqE,cAAjB,CAAiCC,IAAjC,CAA0GtE,KAA1G,CAAiCsE,IAAjC,CAAuCC,OAAvC,CAA0GvE,KAA1G,CAAuCuE,OAAvC,CAAgDC,iBAAhD,CAA0GxE,KAA1G,CAAgDwE,iBAAhD,CAAmEC,gBAAnE,CAA0GzE,KAA1G,CAAmEyE,gBAAnE,CAAqFC,iBAArF,CAA0G1E,KAA1G,CAAqF0E,iBAArF,CAEA,GAAMC,UAAS,CAAGlE,yCAAW,CAAC,UAAM,CAChC4D,cAAc,EAAIA,cAAc,EAAhC,CACH,CAF4B,CAE1B,CAACI,gBAAD,CAF0B,CAA7B,CAIA,GAAMG,aAAY,CAAGnE,yCAAW,CAAC,UAAM,CACnCiE,iBAAiB,EAAIA,iBAAiB,CAACJ,IAAI,CAACzG,GAAN,CAAtC,CACH,CAF+B,CAE7B,CAACyG,IAAI,CAACzG,GAAN,CAAU6G,iBAAV,CAF6B,CAAhC,CAIA,MACI,4CAAC,eAAD,EAAM,KAAK,CAAE/D,WAAM,CAACkD,SAApB,EACI,2CAAC,eAAD,EAAM,KAAK,CAAElD,WAAM,CAACkE,cAApB,EACI,2CAAC,eAAD,EAAM,KAAK,CAAElE,WAAM,CAAC1D,KAApB,EAA4BqH,IAAI,CAACrH,KAAjC,CADJ,CAEI,2CAAC,YAAD,EAAc,OAAO,CAAE2H,YAAvB,WAFJ,CADJ,CAMQ,CAACL,OAAD,EACA,2CAAC,eAAD,EAAM,KAAK,CAAE5D,WAAM,CAACmE,iBAApB,EACI,2CAAC,WAAD,EACI,KAAK,CAAEnE,WAAM,CAACoE,KADlB,CAEI,YAAY,CAAEP,iBAFlB,CAGI,KAAK,CAAEC,gBAHX,CAII,oBAAoB,CAAE7E,SAJ1B,CAKI,WAAW,CAAE,cALjB,CAMI,WAAW,KANf,EADJ,CASI,2CAAC,YAAD,EAAc,OAAO,CAAE+E,SAAvB,aATJ,CAPR,CAmBK1E,QAAQ,EAAI,IAnBjB,CADJ,CAwBH,CAnCsC,CAAhC,CAqCP,GAAMU,YAAM,CAAGE,qBAAU,CAACC,MAAX,CAAkB,CAC7B+C,SAAS,CAAE,CACPG,UAAU,CAAEC,oBAAS,CAACC,aAAV,EAA2B,CADhC,CAEPV,IAAI,CAAE,CAFC,CAGPtC,cAAc,CAAE,YAHT,CAIPD,iBAAiB,CAAEzB,OAAO,CAAG,CAJtB,CAKPiE,eAAe,CAAEjE,OAAO,CAAG,CALpB,CADkB,CAS7BqF,cAAc,CAAE,CACZV,aAAa,CAAE,KADH,CAEZjD,cAAc,CAAE,eAFJ,CATa,CAa7BjE,KAAK,CAAE,CACHoE,QAAQ,CAAE3B,eADP,CAEH0B,KAAK,CAAExB,SAFJ,CAGHoF,SAAS,CAAE,QAHR,CAbsB,CAkB7BF,iBAAiB,CAAE,CACfX,aAAa,CAAE,KADA,CAEfjD,cAAc,CAAE,eAFD,CAGfyC,cAAc,CAAEnE,OAAO,CAAG,CAHX,CAlBU,CAuB7BuF,KAAK,CAAE,CACHxF,KAAK,CAAE,CAACD,KAAK,CAAGE,OAAO,CAAG,CAAnB,EAAwB,GAD5B,CAvBsB,CAAlB,CAAf,C;;;;;k2BC1CO,GAAMyF,KAAyB,CAAGlF,kCAAI,CAAC,cAAkB,IAAhBpC,KAAgB,MAAhBA,IAAgB,CAAV2G,IAAU,MAAVA,IAAU,CAC5D,0BAA+BvI,GAAG,CAACmJ,kBAAJ,EAA/B,kFAAOxH,OAAP,2BAAiB4E,SAAjB,2BAAiBA,SAAjB,CACA,GAAMG,WAAU,CAAGZ,4BAAgB,EAAnC,CACA,gBAA+CI,sBAAU,EAAzD,CAAO1D,iBAAP,aAAOA,iBAAP,CAA0BG,iBAA1B,aAA0BA,iBAA1B,CAEA,GAAMyG,UAAS,CAAG1E,yCAAW,CAAC,UAAM,CAChC,GAAI2E,SAAQ,CAAG,CAAf,CACA,MAAO,WAAM,CACTA,QAAQ,GACRC,UAAU,CAAC,UAAM,CACbD,QAAQ,CAAG,CAAX,CACH,CAFS,CAEP,GAFO,CAAV,CAGA,GAAIA,QAAQ,GAAK,CAAjB,CAAoB,CAChB7G,iBAAiB,CAAC+F,IAAD,CAAjB,CACA5F,iBAAiB,CAACf,IAAD,CAAjB,CACA8E,UAAU,CAACG,QAAX,CAAoB,YAApB,CAAkC,CAACC,MAAM,CAAE,YAAT,CAAuBxH,MAAM,CAAE,CAACwH,MAAM,CAAE,UAAT,CAA/B,CAAlC,EACH,CAJD,IAIO,CACN,CACJ,CAXD,CAYH,CAd4B,CAc1B,CAACyB,IAAD,CAAO3G,IAAP,CAd0B,CAA7B,CAgBA,GAAM2H,UAAS,CAAG7E,yCAAW,CAAC,UAAM,CAChC/C,OAAO,CAAC,uCAAIC,IAAL,MAAW/B,MAAM,CAAE+B,IAAI,CAAC/B,MAAL,GAAgB,CAAhB,CAAoB,CAApB,CAAwB,CAA3C,GAAP,CACH,CAF4B,CAE1B,CAAC+B,IAAD,CAF0B,CAA7B,CAIA,MACI,4CAAC,oBAAD,EAAW,OAAO,CAAEwH,SAAS,EAA7B,EACI,2CAAC,eAAD,EAAM,KAAK,CAAExE,WAAM,CAAC4E,aAApB,EACI,2CAAC,eAAD,EAAM,KAAK,CAAE5E,WAAM,CAAC1D,KAApB,EAA4BU,IAAI,CAACV,KAAjC,CADJ,CAEI,2CAAC,YAAD,EAAc,WAAW,CAAE0D,WAAM,CAACC,MAAlC,CAA0C,QAAQ,CAAE0B,SAApD,CAA+D,OAAO,CAAEgD,SAAxE,UAFJ,CADJ,CADJ,CAQH,CAjC4C,CAAtC,CAmCP,GAAM3E,YAAM,CAAGE,qBAAU,CAACC,MAAX,CAAkB,CAC7ByE,aAAa,CAAE,CACXpB,aAAa,CAAE,KADJ,CAEXjD,cAAc,CAAE,eAFL,CAGXyC,cAAc,CAAElE,MAAM,CAAG,CAHd,CAIXgE,eAAe,CAAEjE,OAAO,CAAG,CAJhB,CAKXyB,iBAAiB,CAAEzB,OAAO,CAAG,CALlB,CADc,CAQ7BuE,WAAW,CAAE,CACTL,eAAe,CAAE7D,eADR,CARgB,CAW7B5C,KAAK,CAAE,CACHmE,KAAK,CAAExB,SADJ,CAEHyB,QAAQ,CAAE3B,eAFP,CAGH8F,QAAQ,CAAG,CAAClG,KAAK,CAAGE,OAAO,CAAG,CAAnB,EAAwB,GAHhC,CAXsB,CAgB7BoB,MAAM,CAAE,CACJ6E,SAAS,CAAErG,MAAM,CAAG,EADhB,CAhBqB,CAAlB,CAAf,C;;;;;yDCvCO,GAAMsG,MAA2B,CAAG3F,kCAAI,CAAC,cAAmB,IAAjB4F,MAAiB,MAAjBA,KAAiB,CAAVrB,IAAU,MAAVA,IAAU,CAE/D,GAAMsB,OAAgC,CAAG,QAAnCA,OAAmC,OAAY,IAAVC,KAAU,OAAVA,IAAU,CACjD,MACQ,4CAAC,IAAD,EAAM,IAAI,CAAEvB,IAAZ,CAAkB,GAAG,CAAEuB,IAAI,CAAChI,GAA5B,CAAiC,IAAI,CAAEgI,IAAvC,EADR,CAGH,CAJD,CAMA,MACI,4CAAC,eAAD,MACI,2CAAC,mBAAD,EACI,IAAI,CAAEF,KADV,CAEI,SAAS,CAAEA,KAFf,CAGI,YAAY,CAAE,sBAACE,IAAD,QAAUA,KAAI,CAAChI,GAAf,EAHlB,CAII,UAAU,CAAE+H,MAJhB,CAKI,OAAO,CAAEtB,IAAI,CAACzG,GALlB,EADJ,CADJ,CAWH,CAnB8C,CAAxC,C;;iECEA,GAAMiI,cAAqC,CAAG/F,kCAAI,CAAC,cAAY,IAAVuE,KAAU,MAAVA,IAAU,CAClE,cAAkCyB,sCAAQ,CAAC,EAAD,CAA1C,CAAOC,SAAP,cAAkBC,YAAlB,cACA,0BAA0BlK,GAAG,CAACmK,gBAAJ,CAAqB,CAAC5I,UAAU,CAAEgH,IAAI,CAACzG,GAAlB,CAArB,CAA1B,CAAOzC,IAAP,uBAAOA,IAAP,CAAakH,SAAb,uBAAaA,SAAb,CACA,0BAAqBvG,GAAG,CAACoK,qBAAJ,EAArB,kFAAO/I,UAAP,2BACA,0BAAmBrB,GAAG,CAACqK,mBAAJ,EAAnB,kFAAO3I,QAAP,2BACA,GAAMkI,MAAK,CAAGvK,IAAH,cAAGA,IAAI,CAAEiL,KAApB,CAEA,GAAMC,kBAAiB,CAAG7F,yCAAW,CAAC,SAACtG,KAAD,CAAmB,CACrD8L,YAAY,CAAC9L,KAAD,CAAZ,CACH,CAFoC,CAElC,CAAC6L,SAAD,CAFkC,CAArC,CAIA,GAAM3B,eAAc,CAAG5D,yCAAW,CAAC,UAAM,CACrChD,QAAQ,CAAC,CAACH,UAAU,CAAEgH,IAAI,CAACzG,GAAlB,CAAuBZ,KAAK,CAAE+I,SAA9B,CAAD,CAAR,CACAC,YAAY,CAAC,EAAD,CAAZ,CACH,CAHiC,CAG/B,CAAC3B,IAAI,CAACzG,GAAN,CAAWmI,SAAX,CAH+B,CAAlC,CAKA,GAAMtB,kBAAiB,CAAGjE,yCAAW,CAAC,SAACtD,MAAD,CAAoB,CACtDC,UAAU,CAACD,MAAD,CAAV,CACH,CAFoC,CAElC,CAACmH,IAAI,CAACzG,GAAN,CAFkC,CAArC,CAIA,MACI,4CAAC,IAAD,EACI,gBAAgB,CAAEmI,SADtB,CAEI,iBAAiB,CAAEM,iBAFvB,CAGI,IAAI,CAAEhC,IAHV,CAII,cAAc,CAAED,cAJpB,CAKI,iBAAiB,CAAEK,iBALvB,EAOKpC,SAAS,CACN,2CAAC,4BAAD,EAAmB,KAAK,CAAE,OAA1B,CAAmC,IAAI,CAAE,OAAzC,EADM,CAGN,2CAAC,KAAD,EAAO,IAAI,CAAEgC,IAAb,CAAmB,KAAK,CAAEqB,KAA1B,EAVR,CADJ,CAcH,CAlCwD,CAAlD,C;;4DCPA,GAAMY,kBAAQ,CAAG,QAAXA,SAAW,EAAM,CAC1B,GAAMjC,KAAI,CAAG3C,cAAc,CAAC,SAAAnD,KAAK,QAAIA,MAAK,CAACM,mBAAN,CAA0BV,WAA9B,EAAN,CAA3B,CACA,MACI,4CAAC,aAAD,EAAe,IAAI,CAAEkG,IAArB,EADJ,CAGH,CALM,C;;;;;8DCEP,GAAMkC,IAAG,CAAGC,2CAAwB,EAApC,CAEO,GAAMC,sBAAU,CAAG,QAAbA,WAAa,EAAM,CAC5B,MACI,4CAAC,GAAD,CAAK,SAAL,EACI,mBAAmB,CAAE,CAAChD,eAAe,CAAE,kBAAlB,CADzB,CAEI,aAAa,CAAE,CAACiD,WAAW,CAAE,KAAd,CAFnB,EAII,2CAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAE,UAAlB,CAA8B,SAAS,CAAEJ,iBAAzC,EAJJ,CAKI,2CAAC,GAAD,CAAK,MAAL,EAAY,IAAI,CAAE,UAAlB,CAA8B,SAAS,CAAE3C,iBAAzC,EALJ,CADJ,CASH,CAVM,C;;;;;0DCMA,GAAMgD,OAAuB,CAAG7G,kCAAI,CAAC,cAAyB,IAAvB8G,kBAAuB,MAAvBA,iBAAuB,CACjE,cAAoCd,sCAAQ,CAAC,EAAD,CAA5C,CAAOe,UAAP,cAAmBC,aAAnB,cACA,GAAMtE,WAAU,CAAGZ,4BAAgB,EAAnC,CACA,wBAAe9F,GAAG,CAACsG,cAAJ,EAAf,CAAOjH,IAAP,qBAAOA,IAAP,CAEA,GAAM4L,YAAW,CAAGvG,yCAAW,CAAC,SAACtG,KAAD,CAAmB,CAC/C4M,aAAa,CAAC5M,KAAD,CAAb,CACH,CAF8B,CAE5B,CAAC2M,UAAD,CAF4B,CAA/B,CAIA,GAAMG,aAAY,CAAGxG,yCAAW,CAAC,UAAM,CACnCoG,iBAAiB,CAACC,UAAD,CAAjB,CACAC,aAAa,CAAC,EAAD,CAAb,CACH,CAH+B,CAG7B,CAACD,UAAD,CAH6B,CAAhC,CAKApE,uCAAS,CAAC,UAAM,CACZ,GAAItH,IAAI,EAAIA,IAAI,CAACuH,UAAL,GAAoB,CAAhC,CAAmC,CAC/BF,UAAU,CAACG,QAAX,CAAoB,OAApB,EACH,CACJ,CAJQ,CAIN,CAACxH,IAAD,CAJM,CAAT,CAMA,MACI,4CAAC,eAAD,EAAM,KAAK,CAAEuF,aAAM,CAACkD,SAApB,EACI,2CAAC,WAAD,EACI,KAAK,CAAElD,aAAM,CAACuG,eADlB,CAEI,YAAY,CAAEF,WAFlB,CAGI,KAAK,CAAEF,UAHX,CAII,oBAAoB,CAAElH,SAJ1B,CAKI,WAAW,CAAE,SALjB,EADJ,CAQI,2CAAC,YAAD,EAAc,WAAW,CAAEe,aAAM,CAACC,MAAlC,CAA0C,OAAO,CAAEqG,YAAnD,gBARJ,CADJ,CAcH,CAlC0C,CAApC,CAoCP,GAAMtG,cAAM,CAAGE,qBAAU,CAACC,MAAX,CAAkB,CAC7B+C,SAAS,CAAE,CACPG,UAAU,CAAEC,oBAAS,CAACC,aAAV,EAA2B,CADhC,CAEP3E,KAAK,CAAED,KAFA,CAGPD,MAAM,CAAED,MAAM,CAAG,CAHV,CAIP6B,iBAAiB,CAAE,EAJZ,CAKPwC,eAAe,CAAE,CALV,CAMPC,eAAe,CAAE7D,eANV,CAOPsE,aAAa,CAAE,KAPR,CAQPhD,UAAU,CAAE,QARL,CASPD,cAAc,CAAE,eATT,CADkB,CAY7BN,MAAM,CAAE,CACJvB,MAAM,CAAE,CAACD,MAAM,CAAGI,OAAO,CAAG,CAApB,EAAyB,EAD7B,CAEJD,KAAK,CAAE,CAACD,KAAK,CAAGE,OAAO,CAAG,CAAnB,EAAwB,CAF3B,CAZqB,CAgB7B0H,eAAe,CAAE,CACb7H,MAAM,CAAE,CAACD,MAAM,CAAGI,OAAO,CAAG,CAApB,EAAyB,EADpB,CAEbD,KAAK,CAAE,CAACD,KAAK,CAAGE,OAAO,CAAG,CAAnB,EAAwB,CAFlB,CAGb2H,WAAW,CAAC,OAHC,CAIbC,WAAW,CAAC,aAJC,CAhBY,CAAlB,CAAf,C;;gEC9CO,GAAMC,0BAAY,CAAG,QAAfA,aAAe,EAAM,CAC9B,MACI,4CAAC,eAAD,EAAM,KAAK,CAAE1G,mBAAM,CAACkD,SAApB,EACI,2CAAC,eAAD,EAAM,KAAK,CAAElD,mBAAM,CAAC1D,KAApB,4BADJ,CADJ,CAOH,CARM,CASP,GAAM0D,oBAAM,CAAGE,qBAAU,CAACC,MAAX,CAAkB,CAC7B+C,SAAS,CAAE,CACPtE,KAAK,CAAED,KADA,CAEPD,MAAM,CAAED,MAAM,CAAG,IAFV,CAGP8B,cAAc,CAAE,QAHT,CAIPC,UAAU,CAAE,QAJL,CADkB,CAO7BlE,KAAK,CAAE,CACHmE,KAAK,CAAExB,SADJ,CAEHyB,QAAQ,CAAE3B,eAFP,CAPsB,CAAlB,CAAf,C;;oECHO,GAAM4H,iBAAwC,CAAGvH,kCAAI,CAAC,cAAgB,IAAdE,SAAc,MAAdA,QAAc,CAEzE,MACI,4CAAC,eAAD,EAAM,KAAK,CAAEU,uBAAM,CAAC4G,aAApB,EACKtH,QADL,CADJ,CAKH,CAP2D,CAArD,CASA,GAAMU,wBAAM,CAAGE,qBAAU,CAACC,MAAX,CAAkB,CACpCyG,aAAa,CAAE,CACXhI,KAAK,CAAED,KADI,CAEXkI,SAAS,CAAG,CAACpI,MAAM,CAAGI,OAAO,CAAG,CAApB,EAAyB,CAF1B,CAGXmE,cAAc,CAAElE,MAAM,CAAG,CAHd,CAIXuF,SAAS,CAAE,QAJA,CADqB,CAAlB,CAAf,C;;4DCRA,GAAMyC,kBAAQ,CAAG,QAAXA,SAAW,EAAM,CAC1B,0BAAkD1L,GAAG,CAAC2L,mBAAJ,EAAlD,CAAaC,QAAb,uBAAOvM,IAAP,CAAuBkH,SAAvB,uBAAuBA,SAAvB,CAAiCC,OAAjC,uBAAiCA,OAAjC,CAAyC5G,KAAzC,uBAAyCA,KAAzC,CACA,0BAAqBI,GAAG,CAAC6L,mBAAJ,EAArB,kFAAOC,UAAP,2BACA,GAAMpF,WAAU,CAAGZ,4BAAgB,EAAnC,CACA,gBAA4BI,sBAAU,EAAtC,CAAO1D,iBAAP,aAAOA,iBAAP,CAEA,GAAMsI,kBAAiB,CAAGpG,yCAAW,CAAC,SAACqH,YAAD,CAA0B,CAC5DD,UAAU,CAACC,YAAD,CAAV,CACH,CAFoC,CAElC,EAFkC,CAArC,CAIA,GAAMlC,OAAoC,CAAG,QAAvCA,OAAuC,MAAY,IAAVC,KAAU,MAAVA,IAAU,CACrD,GAAMkC,WAAU,CAAG,QAAbA,WAAa,EAAM,CACrBxJ,iBAAiB,CAACsH,IAAD,CAAjB,CACApD,UAAU,CAACG,QAAX,CAAoB,YAApB,CAAkC,CAACC,MAAM,CAAE,YAAT,CAAuBxH,MAAM,CAAE,CAACwH,MAAM,CAAE,UAAT,CAA/B,CAAlC,EACH,CAHD,CAIApI,OAAO,CAACC,GAAR,CAAYmL,IAAZ,EACA,MACI,4CAAC,2BAAD,EAAkB,aAAa,CAAE,CAAjC,CAAoC,WAAW,CAAEkC,UAAjD,EACI,2CAAC,gBAAD,MACI,2CAAC,aAAD,EAAe,IAAI,CAAElC,IAArB,EADJ,CADJ,CADJ,CAOH,CAbD,CAeA,GAAIvD,SAAJ,CAAe,CACX,MAAO,4CAAC,4BAAD,MAAP,CACH,CACD,GAAGC,OAAH,CAAW,CACP,MACI,4CAAC,eAAD,cADJ,CAGH,CAED,MACI,4CAAC,mBAAD,EACI,IAAI,CAAEoF,QADV,CAEI,8BAA8B,CAAE,KAFpC,CAGI,YAAY,CAAE,sBAAC9B,IAAD,QAAUA,KAAI,CAAChI,GAAf,EAHlB,CAII,UAAU,CAAE+H,MAJhB,CAKI,mBAAmB,CAAE,2CAAC,MAAD,EAAQ,iBAAiB,CAAEiB,iBAA3B,EALzB,CAMI,kBAAkB,CAAE,2CAAC,yBAAD,MANxB,CAOI,OAAO,CAAE,MAPb,EADJ,CAWH,CA7CM,C;;8DCLP,GAAML,eAAG,CAAGC,2CAAwB,EAApC,CAEO,GAAMuB,sBAAU,CAAG,QAAbA,WAAa,EAAM,CAC5B,MACI,4CAAC,cAAD,CAAK,SAAL,EAEI,aAAa,CAAE,CAACrB,WAAW,CAAE,KAAd,CAFnB,EAGI,2CAAC,cAAD,CAAK,MAAL,EAAY,IAAI,CAAE,UAAlB,CAA8B,SAAS,CAAEc,iBAAzC,EAHJ,CAII,2CAAC,cAAD,CAAK,MAAL,EAAY,IAAI,CAAE,YAAlB,CAAgC,SAAS,CAAEf,qBAA3C,EAJJ,CADJ,CAQH,CATM,C;;8DCFP,GAAMF,eAAG,CAAGC,2CAAwB,EAApC,CAEO,GAAMwB,sBAAU,CAAG,QAAbA,WAAa,EAAM,CAC5B,MACI,4CAAC,cAAD,CAAK,SAAL,EACI,aAAa,CAAE,CAACtB,WAAW,CAAE,KAAd,CADnB,EAEI,2CAAC,cAAD,CAAK,MAAL,EAAY,IAAI,CAAE,YAAlB,CAAgC,SAAS,CAAEqB,qBAA3C,EAFJ,CAGI,2CAAC,cAAD,CAAK,MAAL,EAAY,IAAI,CAAE,OAAlB,CAA2B,SAAS,CAAE5F,WAAtC,EAHJ,CADJ,CAOH,CARM,C;;;;;uDCDQ,QAAS8F,IAAT,EAAe,CAC1B,MACI,4CAAC,8BAAD,MACI,2CAAC,4BAAD,MADJ,CAEI,2CAAC,cAAD,EAAU,KAAK,CAAEvJ,KAAjB,EACI,2CAAC,qBAAD,MADJ,CAFJ,CADJ,CAQH,C","file":"static/js/app.3f616813.chunk.js","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const saveStorage = async (key:string,value:unknown) => {\r\n    try {\r\n        const jsonValue = JSON.stringify(value)\r\n        await AsyncStorage.setItem(key,jsonValue);\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const loadStorage = async (key:string) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem(key);\r\n        return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n};","import {BaseQueryFn, createApi} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {AuthDataType, Data, GetTaskType, Item, LoginPayloadType, TaskItem, TodoListItem} from \"./types/types\";\r\nimport axios, {AxiosError, AxiosRequestConfig} from \"axios\";\r\nimport {loadStorage, saveStorage} from \"../Utils/AsyncStorageUtils\";\r\n\r\nconst axiosQuery = (\r\n    {baseUrl, withCredentials, headers}:\r\n        {\r\n            baseUrl: string,\r\n            withCredentials?: boolean,\r\n            headers?: AxiosRequestConfig[\"headers\"]\r\n        } = {baseUrl: ''}\r\n): BaseQueryFn<{\r\n    url: string\r\n    method: AxiosRequestConfig['method']\r\n    data?: AxiosRequestConfig['data']\r\n    params?: AxiosRequestConfig['params']\r\n},\r\n    unknown,\r\n    unknown> =>\r\n    async ({url, method, data, params}) => {\r\n        // из-за того что бек расчитан под работу только с вэб приложениями, приходится имитировать браузерные запросы\r\n        //прокидывая браузерные куки с каждым запросом\r\n        const cookie = await loadStorage(\"Cookie\")\r\n        if (cookie) {\r\n            // headers = {\r\n            //     ...headers,\r\n            //     \"cookie\": `_ym_d=1649395568; _ym_uid=1649395568426605962; ASP.NET_SessionId=opdrxfnafx0gj2g1ulp5mzs3; _ym_isad=2; ${cookie}`\r\n            // }\r\n        }\r\n        try {\r\n            console.log(headers)\r\n            const result = await axios({url: baseUrl + url, method, data, params, headers, withCredentials})\r\n            console.log(result)\r\n            // if (result.headers[\"set-cookie\"]) {\r\n            //     saveStorage(\"Cookie\", result.headers[\"set-cookie\"]?.join(\"\"))\r\n            // }\r\n            return {data: result.data}\r\n        } catch (axiosError) {\r\n            if (axiosError instanceof AxiosError) {\r\n                let err = axiosError as AxiosError\r\n                console.log(err)\r\n                return {\r\n                    error: {\r\n                        status: err.response?.status,\r\n                        data: err.response?.data || err.message,\r\n                    },\r\n                }\r\n            } else {\r\n                throw axiosError\r\n            }\r\n        }\r\n    }\r\n\r\n\r\nexport const Api = createApi({\r\n    reducerPath: \"Api\",\r\n    tagTypes: [\"login\", \"logout\", \"postTodo\", \"deleteTodo\", \"putTodo\", \"postTask\", \"putTask\", \"deleteTask\"],\r\n    baseQuery: axiosQuery(\r\n        {\r\n            baseUrl: `https://mini-trello-backend.herokuapp.com`,\r\n                // 'https://social-network.samuraijs.com/api/1.1/',\r\n            // headers: {\r\n            //     \"API-KEY\": \"1fb0efe7-1c1f-46ce-bb74-74ed02f7875f\"\r\n            // },\r\n            // withCredentials: true\r\n        }\r\n    ),\r\n    endpoints: ((build) => ({\r\n        authMe: build.query<Data<AuthDataType>, void>({\r\n            query: () => ({url: `/auth/me`, method: \"get\"}),\r\n            providesTags: () => [\"login\", \"logout\"]\r\n        }),\r\n        login: build.mutation<Data<{ userId: string }>, LoginPayloadType>({\r\n            query: (payload) => ({url: `/auth/login`, method: \"POST\", data: payload}),\r\n            invalidatesTags: [\"login\"]\r\n        }),\r\n        logout: build.mutation<Data<{}>, void>({\r\n            query: (payload) => ({url: `/auth/login`, method: \"DELETE\", body: payload}),\r\n            invalidatesTags: [\"logout\"]\r\n        }),\r\n\r\n        getTodoList: build.query<TodoListItem[], void>({\r\n            query: () => ({url: `/todo-lists`, method: \"get\"}),\r\n            providesTags: () => [\"postTodo\", \"putTodo\", \"deleteTodo\"]\r\n        }),\r\n        postTodo: build.mutation<Data<Item<TodoListItem>>, string>({\r\n            query: (title: string = \"New todo\") => ({url: `/todo-lists`, method: `post`, data: {title}}),\r\n            invalidatesTags: [\"postTodo\"]\r\n        }),\r\n        putTodo: build.mutation<Data<{}>, { title: string, todoId: string }>({\r\n            query: (payload) => ({url: `/todo-lists/${payload.todoId}`, method: `put`, data: {title: payload.title}}),\r\n            invalidatesTags: [\"putTodo\"]\r\n        }),\r\n        deleteTodo: build.mutation<Data<{}>, string>({\r\n            query: (todoId) => ({url: `/todo-lists/${todoId}`, method: \"delete\"}),\r\n            invalidatesTags: [\"deleteTodo\"]\r\n        }),\r\n\r\n        getTasks: build.query<GetTaskType, { todolistId: string, count?: number, page?: number }>({\r\n            query: ({todolistId, page = 1, count = 100}) => ({\r\n                url: `/todo-lists/${todolistId}/tasks`,\r\n                method: \"get\",\r\n                params: {count, page}\r\n            }),\r\n            providesTags: () => [\"postTask\", \"putTask\", \"deleteTask\"]\r\n        }),\r\n\r\n        postTask: build.mutation<Data<Item<TaskItem>>, { todolistId: string, title: string }>({\r\n            query: ({todolistId, title}) => {\r\n                return {url: `/todo-lists/${todolistId}/tasks`, method: \"post\", data: {title}}\r\n            },\r\n            invalidatesTags: [\"postTask\"]\r\n        }),\r\n\r\n        putTask: build.mutation<Data<Item<TaskItem>>, TaskItem>({\r\n            query: (task) => ({url: `/todo-lists/${task.todoListId}/tasks/${task._id}`, method: \"put\", data: task}),\r\n            invalidatesTags: [\"putTask\"]\r\n        }),\r\n        deleteTask: build.mutation<Data<{}>, { todolistId: string, taskId: string }>({\r\n            query: ({todolistId, taskId}) => ({url: `/todo-lists/${todolistId}/tasks/${taskId}`, method: \"delete\"}),\r\n            invalidatesTags: [\"deleteTask\"]\r\n        })\r\n\r\n    }))\r\n})\r\n\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {TaskItem, TodoListItem} from \"../DAL/types/types\";\r\n\r\n\r\nexport const navigateParamsSlice=createSlice({\r\n    name:\"navigateParamsSlice\",\r\n    initialState:{\r\n        currentTodo:{} as  TodoListItem,\r\n        currentTask:{} as TaskItem\r\n    },\r\n    reducers:{\r\n        changeCurrentTodo:(state,action:PayloadAction<TodoListItem>)=>{\r\n            state.currentTodo=action.payload\r\n        },\r\n        changeCurrentTask:(state,action:PayloadAction<TaskItem>)=>{\r\n            state.currentTask=action.payload\r\n        }\r\n    }\r\n})","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport {Api} from \"../DAL/Api\";\r\nimport {navigateParamsSlice} from \"./NavigateParamsSlice\";\r\n\r\nexport const store=configureStore({\r\n    reducer:{\r\n        navigateParamsState:navigateParamsSlice.reducer,\r\n        [Api.reducerPath]:Api.reducer\r\n    },\r\n    middleware:getDefaultMiddleware =>\r\n        getDefaultMiddleware().concat(Api.middleware)\r\n})\r\n\r\nexport type AppRootStateType =ReturnType<typeof store.getState>\r\nexport type AppDispatchType=typeof store.dispatch","import {Dimensions} from \"react-native\";\r\nexport const {height:HEIGHT,width:WIDTH}=Dimensions.get(\"screen\")\r\n// export const HEIGHT=500\r\n// export const WIDTH=500\r\nexport const PADDING = 30\r\nexport const MARGIN=30\r\nexport const FONTSIZEPrimary=22\r\nexport const FONTSIZESecondary=15\r\nexport const TEXTCOLOR=\"#050505\"\r\nexport const BACKGROUNDCOLOR=\"rgb(60,134,168)\"\r\n\r\n","import {ColorValue, GestureResponderEvent, StyleSheet, Text, TouchableHighlight, View} from \"react-native\";\r\nimport {FC, memo, ReactElement, useCallback} from \"react\";\r\nimport {BACKGROUNDCOLOR, FONTSIZEPrimary, PADDING, TEXTCOLOR, WIDTH} from \"./Variables\";\r\nimport {commonBorderStyle} from \"./Styles\";\r\nimport React from \"react\";\r\ntype CustomButtonPropsType = {\r\n    onPress?: (event: GestureResponderEvent) => void\r\n    title?: string\r\n    styleButton?: Object\r\n    styleTitle?: Object\r\n    activeOpacity?: number\r\n    underlayColor?: ColorValue\r\n    children?: ReactElement|string\r\n    disabled?:boolean\r\n}\r\nexport const CustomButton: FC<CustomButtonPropsType> = memo((props) => {\r\n    const {children, onPress, title = \"Button\", styleButton, styleTitle, activeOpacity, underlayColor,disabled} = props\r\n\r\n    const onPressHandler = useCallback( (event: GestureResponderEvent) => {\r\n        onPress && onPress(event)\r\n    },[onPress])\r\n\r\n    return (\r\n        <TouchableHighlight\r\n            onPress={onPressHandler}\r\n            disabled={disabled}\r\n            activeOpacity={!!activeOpacity ? activeOpacity : 0.2}\r\n            style={styles.button}\r\n            underlayColor={!!underlayColor ? underlayColor : BACKGROUNDCOLOR}\r\n        >\r\n            <Text style={styles.title}>\r\n                {children || title}\r\n            </Text>\r\n        </TouchableHighlight>\r\n    )\r\n})\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        minWidth: (WIDTH - PADDING * 2) / 7,\r\n        flexWrap:\"nowrap\",\r\n        paddingHorizontal: 5,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n\r\n    },\r\n    title: {\r\n        color: 'rgba(5,5,5)',\r\n        fontSize: FONTSIZEPrimary\r\n    }\r\n})","import React from \"react\";\r\nimport styled from 'styled-components/native'\r\nimport {FONTSIZEPrimary, TEXTCOLOR,} from \"../common/Variables\";\r\n// import {TextInput} from \"react-native\";\r\n\r\nexport const StyledInput = styled.TextInput`\r\n  padding: 0 10px 0 10px;\r\n  font-size: ${FONTSIZEPrimary}px;\r\n  color: ${TEXTCOLOR};\r\n  border-style: solid;\r\n  border-color: ${TEXTCOLOR};\r\n  border-radius: 10px;\r\n  border-width: 1px;\r\n`","import {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatchType, AppRootStateType} from \"../BLL/Store\";\r\nimport {useNavigation} from \"@react-navigation/native\";\r\nimport {useNavigationType} from \"../screens/types/types\";\r\nimport {bindActionCreators} from \"@reduxjs/toolkit\";\r\nimport {navigateParamsSlice} from \"../BLL/NavigateParamsSlice\";\r\n\r\nexport const useAppDispatch: () => AppDispatchType = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\nexport const useAppNavigation = () => useNavigation<useNavigationType>()\r\n\r\nconst allActions = {\r\n    ...navigateParamsSlice.actions\r\n}\r\nexport const useActions = () => {\r\n    const dispatch = useAppDispatch()\r\n    return bindActionCreators(allActions, dispatch)\r\n}","import React, {useEffect} from \"react\";\r\nimport {CustomButton} from \"../common/CustomButton\";\r\nimport {StyleSheet, View, Text, NativeSyntheticEvent, NativeTouchEvent, ActivityIndicator} from \"react-native\";\r\nimport {Formik} from 'formik';\r\nimport {StyledInput} from \"../styled-components/StyledInput\";\r\nimport {MARGIN, PADDING, WIDTH} from \"../common/Variables\";\r\nimport {commonBorderStyle} from \"../common/Styles\";\r\nimport {Api} from \"../DAL/Api\";\r\nimport {useAppNavigation} from \"../CustomHooks/CustomHooks\";\r\n\r\nexport const Login = () => {\r\n    const {data, isLoading, error, isError} = Api.useAuthMeQuery()\r\n    const err = error as {status: number, data:any}\r\n    const [login] = Api.useLoginMutation()\r\n    const navigation = useAppNavigation()\r\n\r\n    useEffect(() => {\r\n        if (data && data.resultCode === 0) {\r\n            navigation.navigate(\"TodoScreen\", {screen: \"TodoList\"})\r\n        }\r\n    }, [data])\r\n\r\n    const onSubmit = async (values: { email: string, password: string }) => {\r\n        try {\r\n            await login(values)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={styles.loginContainer}>\r\n                <ActivityIndicator size={\"large\"} color={\"rgb(255,255,255)\"}/>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    if (isError) {\r\n        return (\r\n            <View style={styles.loginContainer}>\r\n                {\r\n                    error?\r\n                        <Text>{err.data}</Text>:\r\n                        <Text>error</Text>\r\n                }\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View style={styles.loginContainer}>\r\n            <Formik\r\n                initialValues={{email: '', password: \"\"}}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({handleChange, handleBlur, handleSubmit, values}) => (\r\n                    <View style={styles.loginForm}>\r\n                        <StyledInput\r\n                            onChangeText={handleChange('email')}\r\n                            onBlur={handleBlur('email')}\r\n                            value={values.email}\r\n                        />\r\n                        <StyledInput\r\n                            style={styles.loginTextField}\r\n                            onChangeText={handleChange('password')}\r\n                            onBlur={handleBlur('password')}\r\n                            value={values.password}\r\n                        />\r\n\r\n                        <CustomButton\r\n                            onPress={(handleSubmit as unknown) as (ev: NativeSyntheticEvent<NativeTouchEvent>) => void}\r\n                            title=\"Submit\"/>\r\n                    </View>\r\n                )}\r\n            </Formik>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginContainer: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    loginForm: {\r\n        width: (WIDTH - PADDING * 2),\r\n        paddingHorizontal: PADDING,\r\n        paddingVertical: PADDING,\r\n        backgroundColor: \"rgba(5,5,5,0.5)\",\r\n    },\r\n    loginTextField: {\r\n        marginVertical: MARGIN / 3,\r\n    }\r\n})","import {StatusBar, StyleSheet, Text, View} from \"react-native\";\r\nimport {CustomButton} from \"../common/CustomButton\";\r\nimport React from \"react\";\r\nimport {BACKGROUNDCOLOR, FONTSIZEPrimary, PADDING, TEXTCOLOR} from \"../common/Variables\";\r\nimport {useAppSelector} from \"../CustomHooks/CustomHooks\";\r\n\r\nexport const TaskView = () => {\r\n    const task = useAppSelector(state => state.navigateParamsState.currentTask)\r\n\r\n    return (\r\n        <View\r\n            style={styles.container}>\r\n            <Text style={styles.title}>{task.title}</Text>\r\n            <View style={styles.taskBar}>\r\n                <CustomButton>check</CustomButton>\r\n                <CustomButton>delete</CustomButton>\r\n                <CustomButton>edit</CustomButton>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    checkedTask: {\r\n        backgroundColor: BACKGROUNDCOLOR\r\n    },\r\n    container: {\r\n        paddingTop: StatusBar.currentHeight || 0,\r\n        paddingHorizontal: PADDING / 4,\r\n        flex: 1,\r\n        justifyContent: \"space-between\"\r\n    },\r\n    title: {\r\n        color: TEXTCOLOR,\r\n        fontSize: FONTSIZEPrimary\r\n    },\r\n    taskBar: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n    }\r\n})","import {FC, memo, ReactElement, useCallback} from \"react\";\r\nimport {Text, StyleSheet, View, StatusBar} from \"react-native\";\r\nimport {CustomButton} from \"../common/CustomButton\";\r\nimport {FONTSIZEPrimary, PADDING, TEXTCOLOR, WIDTH} from \"../common/Variables\";\r\nimport React from \"react\";\r\nimport {StyledInput} from \"../styled-components/StyledInput\";\r\nimport {TodoListItem} from \"../DAL/types/types\";\r\n\r\ntype TodoProps = {\r\n    viewMod?: boolean\r\n    todo: TodoListItem\r\n    children?: ReactElement\r\n    addTaskHandler?: () => void\r\n    onChangeTaskTitle?: (value: string) => void\r\n    currentTaskTitle?: string\r\n    deleteTodoHandler?: (todoId: string) => void\r\n}\r\n\r\nexport const Todo: FC<TodoProps> = memo((props) => {\r\n    const {children, addTaskHandler, todo, viewMod, onChangeTaskTitle, currentTaskTitle, deleteTodoHandler} = props\r\n\r\n    const onAddTask = useCallback(() => {\r\n        addTaskHandler && addTaskHandler()\r\n    }, [currentTaskTitle])\r\n\r\n    const onDeleteTodo = useCallback(() => {\r\n        deleteTodoHandler && deleteTodoHandler(todo._id)\r\n    }, [todo._id,deleteTodoHandler])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.titleContainer}>\r\n                <Text style={styles.title}>{todo.title}</Text>\r\n                <CustomButton onPress={onDeleteTodo}>delete</CustomButton>\r\n            </View>\r\n            {\r\n                !viewMod &&\r\n                <View style={styles.inputAndButtonBox}>\r\n                    <StyledInput\r\n                        style={styles.input}\r\n                        onChangeText={onChangeTaskTitle}\r\n                        value={currentTaskTitle}\r\n                        placeholderTextColor={TEXTCOLOR}\r\n                        placeholder={\"task name...\"}\r\n                        caretHidden\r\n                    />\r\n                    <CustomButton onPress={onAddTask}>add task</CustomButton>\r\n                </View>\r\n            }\r\n            {children || null}\r\n        </View>\r\n    )\r\n\r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: StatusBar.currentHeight || 0,\r\n        flex: 1,\r\n        justifyContent: \"flex-start\",\r\n        paddingHorizontal: PADDING / 3,\r\n        paddingVertical: PADDING / 3,\r\n\r\n    },\r\n    titleContainer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    title: {\r\n        fontSize: FONTSIZEPrimary,\r\n        color: TEXTCOLOR,\r\n        alignSelf: \"center\",\r\n    },\r\n    inputAndButtonBox: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        marginVertical: PADDING / 3\r\n    },\r\n    input: {\r\n        width: (WIDTH - PADDING * 2) * 0.6\r\n    }\r\n})","import React, {memo, useCallback} from \"react\";\r\nimport {Text, View, StyleSheet, Pressable} from \"react-native\";\r\nimport {commonBorderStyle} from \"../common/Styles\";\r\nimport {CustomButton} from \"../common/CustomButton\";\r\nimport {BACKGROUNDCOLOR, FONTSIZEPrimary, HEIGHT, MARGIN, PADDING, TEXTCOLOR, WIDTH} from \"../common/Variables\";\r\nimport {useActions, useAppNavigation} from \"../CustomHooks/CustomHooks\";\r\nimport {TaskItem, TodoListItem} from \"../DAL/types/types\";\r\nimport {Api} from \"../DAL/Api\";\r\n\r\ntype TaskProps = {\r\n    task: TaskItem\r\n    todo: TodoListItem\r\n}\r\nexport const Task: React.FC<TaskProps> = memo(({task, todo}) => {\r\n    const [putTask, {isLoading}] = Api.usePutTaskMutation()\r\n    const navigation = useAppNavigation()\r\n    const {changeCurrentTodo, changeCurrentTask} = useActions()\r\n\r\n    const doubleTap = useCallback(() => {\r\n        let tapCount = 0\r\n        return () => {\r\n            tapCount++\r\n            setTimeout(() => {\r\n                tapCount = 0\r\n            }, 300)\r\n            if (tapCount === 2) {\r\n                changeCurrentTodo(todo)\r\n                changeCurrentTask(task)\r\n                navigation.navigate(\"TodoScreen\", {screen: \"TaskScreen\", params: {screen: \"TaskView\"}})\r\n            } else {\r\n            }\r\n        }\r\n    }, [todo, task])\r\n\r\n    const checkTask = useCallback(() => {\r\n        putTask({...task, status: task.status === 0 ? 1 : 0})\r\n    }, [task])\r\n\r\n    return (\r\n        <Pressable onPress={doubleTap()}>\r\n            <View style={styles.taskContainer}>\r\n                <Text style={styles.title}>{task.title}</Text>\r\n                <CustomButton styleButton={styles.button} disabled={isLoading} onPress={checkTask}>check</CustomButton>\r\n            </View>\r\n        </Pressable>\r\n    )\r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n    taskContainer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        marginVertical: MARGIN / 3,\r\n        paddingVertical: PADDING / 4,\r\n        paddingHorizontal: PADDING / 4,\r\n    },\r\n    checkedTask: {\r\n        backgroundColor: BACKGROUNDCOLOR\r\n    },\r\n    title: {\r\n        color: TEXTCOLOR,\r\n        fontSize: FONTSIZEPrimary,\r\n        maxWidth: ((WIDTH - PADDING * 2) / 1.5)\r\n    },\r\n    button: {\r\n        maxHeight: HEIGHT / 25\r\n    },\r\n})","import React, {memo} from \"react\";\r\nimport {Task} from \"./Task\";\r\nimport {FlatList, ListRenderItem,View} from \"react-native\";\r\nimport {TaskItem, TodoListItem} from \"../DAL/types/types\";\r\n\r\ntype TasksProps = {\r\n    tasks?: TaskItem[]\r\n    todo: TodoListItem\r\n}\r\nexport const Tasks: React.FC<TasksProps> = memo(({tasks, todo}) => {\r\n\r\n    const render: ListRenderItem<TaskItem> = ({item}) => {\r\n        return (\r\n                <Task todo={todo} key={item._id} task={item}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <FlatList\r\n                data={tasks}\r\n                extraData={tasks}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={render}\r\n                listKey={todo._id}\r\n            />\r\n        </View>\r\n    )\r\n})\r\n\r\n\r\n","import React, {FC, memo, useCallback, useState} from \"react\";\r\nimport {Api} from \"../DAL/Api\";\r\nimport {Todo} from \"./Todo\";\r\nimport {Tasks} from \"./Tasks\";\r\nimport {TodoListItem} from \"../DAL/types/types\";\r\nimport {ActivityIndicator} from \"react-native\";\r\n\r\ntype TodoContainerProps = {\r\n    todo: TodoListItem\r\n}\r\n\r\nexport const TodoContainer: FC<TodoContainerProps> = memo(({todo}) => {\r\n    const [taskTitle, setTaskTitle] = useState(\"\")\r\n    const {data, isLoading} = Api.useGetTasksQuery({todolistId: todo._id})\r\n    const [deleteTodo] = Api.useDeleteTodoMutation()\r\n    const [postTask] = Api.usePostTaskMutation()\r\n    const tasks = data?.items\r\n\r\n    const onChangeTodoTitle = useCallback((value: string) => {\r\n        setTaskTitle(value)\r\n    }, [taskTitle])\r\n\r\n    const addTaskHandler = useCallback(() => {\r\n        postTask({todolistId: todo._id, title: taskTitle})\r\n        setTaskTitle(\"\")\r\n    }, [todo._id, taskTitle])\r\n\r\n    const deleteTodoHandler = useCallback((todoId: string) => {\r\n        deleteTodo(todoId)\r\n    }, [todo._id])\r\n\r\n    return (\r\n        <Todo\r\n            currentTaskTitle={taskTitle}\r\n            onChangeTaskTitle={onChangeTodoTitle}\r\n            todo={todo}\r\n            addTaskHandler={addTaskHandler}\r\n            deleteTodoHandler={deleteTodoHandler}\r\n        >\r\n            {isLoading ?\r\n                <ActivityIndicator color={\"white\"} size={\"large\"}/>\r\n                :\r\n                <Tasks todo={todo} tasks={tasks}/>}\r\n        </Todo>\r\n    )\r\n})","import React from \"react\";\r\nimport {TodoContainer} from \"./TodoContainer\";\r\nimport {useAppSelector} from \"../CustomHooks/CustomHooks\";\r\n\r\nexport const TaskList = () => {\r\n    const todo = useAppSelector(state => state.navigateParamsState.currentTodo)\r\n    return (\r\n        <TodoContainer todo={todo}/>\r\n    )\r\n}\r\n\r\n","import {TasksScreenStackParamList} from \"../types/types\";\r\nimport {TaskView} from \"../../View/TaskView\";\r\nimport React from \"react\";\r\nimport {TaskList} from \"../../View/TaskList\";\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\n\r\nconst Tab = createBottomTabNavigator<TasksScreenStackParamList>()\r\n\r\nexport const TaskScreen = () => {\r\n    return (\r\n        <Tab.Navigator\r\n            sceneContainerStyle={{backgroundColor: \"rgb(100,101,101)\"}}\r\n            screenOptions={{headerShown: false,}}\r\n        >\r\n            <Tab.Screen name={\"TaskList\"} component={TaskList}/>\r\n            <Tab.Screen name={\"TaskView\"} component={TaskView}/>\r\n        </Tab.Navigator>\r\n    )\r\n}","import {StyleSheet, View, StatusBar, TextInput} from \"react-native\";\r\nimport {BACKGROUNDCOLOR, HEIGHT, PADDING, TEXTCOLOR, WIDTH} from \"../common/Variables\";\r\nimport {FC, memo, useCallback, useEffect, useState} from \"react\";\r\nimport {CustomButton} from \"../common/CustomButton\";\r\nimport {commonStyles} from \"../common/Styles\";\r\nimport {StyledInput} from \"../styled-components/StyledInput\";\r\nimport React from \"react\";\r\nimport {Api} from \"../DAL/Api\";\r\nimport {useAppNavigation} from \"../CustomHooks/CustomHooks\";\r\n\r\ntype HeaderProps = {\r\n    createTodoHandler: (newTodoTitle: string) => void\r\n}\r\n\r\nexport const Header: FC<HeaderProps> = memo(({createTodoHandler}) => {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const navigation = useAppNavigation()\r\n    const {data} = Api.useAuthMeQuery()\r\n\r\n    const onTextInput = useCallback((value: string) => {\r\n        setInputValue(value)\r\n    }, [inputValue])\r\n\r\n    const onCreateTodo = useCallback(() => {\r\n        createTodoHandler(inputValue)\r\n        setInputValue(\"\")\r\n    }, [inputValue])\r\n\r\n    useEffect(() => {\r\n        if (data && data.resultCode === 1) {\r\n            navigation.navigate(\"Login\")\r\n        }\r\n    }, [data])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <StyledInput\r\n                style={styles.modalInputStyle}\r\n                onChangeText={onTextInput}\r\n                value={inputValue}\r\n                placeholderTextColor={TEXTCOLOR}\r\n                placeholder={\"Todo...\"}\r\n            />\r\n            <CustomButton styleButton={styles.button} onPress={onCreateTodo}>\r\n                Create todo\r\n            </CustomButton>\r\n        </View>\r\n    )\r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: StatusBar.currentHeight || 0,\r\n        width: WIDTH,\r\n        height: HEIGHT / 9,\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 5,\r\n        backgroundColor: BACKGROUNDCOLOR,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    button: {\r\n        height: (HEIGHT - PADDING * 2) / 19,\r\n        width: (WIDTH - PADDING * 2) / 2,\r\n    },\r\n    modalInputStyle: {\r\n        height: (HEIGHT - PADDING * 2) / 19,\r\n        width: (WIDTH - PADDING * 2) / 2,\r\n        borderStyle:\"solid\",\r\n        borderColor:\"rgba(5,5,5)\"\r\n    }\r\n})","import {Text, View, StyleSheet} from \"react-native\";\r\nimport {FONTSIZEPrimary, HEIGHT, TEXTCOLOR, WIDTH} from \"../common/Variables\";\r\nimport React from \"react\";\r\n\r\nexport const EmptyContent = () => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>\r\n                O curva! list is empty!\r\n            </Text>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: WIDTH,\r\n        height: HEIGHT * 0.79,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    title: {\r\n        color: TEXTCOLOR,\r\n        fontSize: FONTSIZEPrimary,\r\n    }\r\n})","import {FC, memo, ReactElement} from \"react\";\r\nimport {StyleSheet, View} from \"react-native\";\r\nimport {commonBorderStyle} from \"../common/Styles\";\r\nimport {HEIGHT, MARGIN, PADDING, WIDTH} from \"../common/Variables\";\r\nimport React from \"react\";\r\n\r\ntype TodoContainerProps = {\r\n    children?: ReactElement\r\n}\r\n\r\nexport const ViewModContainer: FC<TodoContainerProps> = memo(({children}) => {\r\n\r\n    return (\r\n        <View style={styles.todoContainer}>\r\n            {children}\r\n        </View>\r\n    )\r\n})\r\n\r\nexport const styles = StyleSheet.create({\r\n    todoContainer: {\r\n        width: WIDTH,\r\n        minHeight: ((HEIGHT - PADDING * 2) / 4),\r\n        marginVertical: MARGIN / 2,\r\n        alignSelf: \"center\"\r\n    },\r\n})\r\n","import {useActions, useAppNavigation} from \"../CustomHooks/CustomHooks\";\r\nimport {ActivityIndicator,Text, FlatList, ListRenderItem, TouchableOpacity,} from 'react-native';\r\nimport {Header} from \"./Header\";\r\nimport {EmptyContent} from \"./EmptyContent\";\r\nimport {ViewModContainer} from \"./ViewModContainer\";\r\nimport React, {useCallback} from \"react\";\r\nimport {Api} from \"../DAL/Api\";\r\nimport {TodoListItem} from \"../DAL/types/types\";\r\nimport {TaskList} from \"./TaskList\";\r\nimport {TodoContainer} from \"./TodoContainer\";\r\n\r\nexport const TodoList = () => {\r\n    const {data: todoList, isLoading,isError,error} = Api.useGetTodoListQuery()\r\n    const [createTodo] = Api.usePostTodoMutation()\r\n    const navigation = useAppNavigation()\r\n    const {changeCurrentTodo} = useActions()\r\n\r\n    const createTodoHandler = useCallback((newTodoTitle: string) => {\r\n        createTodo(newTodoTitle)\r\n    }, [])\r\n\r\n    const render: ListRenderItem<TodoListItem> = ({item}) => {\r\n        const onNavigate = () => {\r\n            changeCurrentTodo(item)\r\n            navigation.navigate(\"TodoScreen\", {screen: \"TaskScreen\", params: {screen: \"TaskList\"}})\r\n        }\r\n        console.log(item)\r\n        return (\r\n            <TouchableOpacity activeOpacity={1} onLongPress={onNavigate}>\r\n                <ViewModContainer>\r\n                    <TodoContainer todo={item}/>\r\n                </ViewModContainer>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <ActivityIndicator/>\r\n    }\r\n    if(isError){\r\n        return (\r\n            <Text>error</Text>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <FlatList\r\n            data={todoList}\r\n            showsHorizontalScrollIndicator={false}\r\n            keyExtractor={(item) => item._id}\r\n            renderItem={render}\r\n            ListHeaderComponent={<Header createTodoHandler={createTodoHandler}/>}\r\n            ListEmptyComponent={<EmptyContent/>}\r\n            listKey={\"root\"}\r\n        />\r\n    );\r\n}\r\n","import {TodoScreenStackParamList} from \"../types/types\";\r\nimport {TaskScreen} from \"../TaskScreen/TaskScreen\";\r\nimport {TodoList} from \"../../View/TodoList\";\r\nimport React from \"react\";\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\n\r\nconst Tab = createBottomTabNavigator<TodoScreenStackParamList>()\r\n\r\nexport const TodoScreen = () => {\r\n    return (\r\n        <Tab.Navigator\r\n\r\n            screenOptions={{headerShown: false,}}>\r\n            <Tab.Screen name={\"TodoList\"} component={TodoList}/>\r\n            <Tab.Screen name={\"TaskScreen\"} component={TaskScreen}/>\r\n        </Tab.Navigator>\r\n    )\r\n}","import React from \"react\";\r\nimport {Login} from \"../../View/Login\";\r\nimport {RootScreenStackParamList} from \"../types/types\";\r\nimport {TodoScreen} from \"../Todo-Screen/TodoScreen\";\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\n\r\nconst Tab = createBottomTabNavigator<RootScreenStackParamList>()\r\n\r\nexport const RootScreen = () => {\r\n    return (\r\n        <Tab.Navigator\r\n            screenOptions={{headerShown: false,}}>\r\n            <Tab.Screen name={\"TodoScreen\"} component={TodoScreen}/>\r\n            <Tab.Screen name={\"Login\"} component={Login}/>\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n","import {Provider} from 'react-redux'\r\nimport {store} from \"./src/BLL/Store\";\r\nimport React from \"react\";\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {RootScreen} from \"./src/screens/Root-screen/RootScreen\";\r\nimport {StatusBar} from \"expo-status-bar\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <NavigationContainer>\r\n            <StatusBar />\r\n            <Provider store={store}>\r\n                <RootScreen/>\r\n            </Provider>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\n\r\n"],"sourceRoot":""}